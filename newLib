-- =================================================================
--      Night UI 修改版一体化加载器 (已内置“玩家增强”模块)
--      执行此脚本将直接加载 Night UI 和您的自定义模块
-- =================================================================

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local NightInit = getgenv().NightInit :: {}

if getgenv().Night then
    -- 如果您希望每次执行都重新加载，可以注释掉下面的 return 语句
    return error("Night is already loaded.")
end

local Night = {
    Version = "",
    Dev = false,
    Connections = {},
    Pages = {},
    Tabs = {Tabs = {}},
    Corners = {},
    Load = os.clock(),
    Notifications = {Objects = {}, Active = {}},
    ArrayList = {Objects = {}, Loaded = false},
    ControlsVisible = true,
    Mobile = false,
    CurrentOpenTab = nil,
    GameSave = game.PlaceId,
    CheckOtherConfig = true,
    Assets = {},
    Teleporting = false,
    InitSave = nil,
    Config = {
        UI = {
            Position = {X = 0.5, Y = 0.5},
            Size = {X = 0.37294304370880129, Y = 0.683131217956543},
            FullScreen = false,
            ToggleKeyCode = "LeftAlt",
            Scale = 1,
            Notifications = true,
            Anim = true,
            ArrayList = false,
            TabColor = {value1 = 25, value2 = 25, value3 = 25},
            TabTransparency = 0.03,
            KeybindTransparency = 0.7,
            KeybindColor = {value1 = 0, value2 = 0, value3 = 0},
        },
        Game = {
            Modules = {},
            Keybinds = {},
            Sliders = {},
            TextBoxes = {},
            MiniToggles = {},
            Dropdowns = {},
            ModuleKeybinds = {},
            Other = {}
        },
    },
    Directories = {
        "Night",
        "Night/Config",
        "Night/Assets",
        "Night/Assets/Fonts"
    }
}

getgenv().Night = Night

for i,v: string in Night.Directories do 
    if not isfolder(v) then
        makefolder(v)
    end
end

if NightInit then
    for i,v in NightInit do
        Night[i] = v 
    end

    Night.InitSave = NightInit
    getgenv().NightInit = nil
end

-- 核心库加载 (从 GitHub 或本地文件)
if Night.Premium then
    if Night.Dev and isfile("Night/Premium/Init.lua") then
        loadstring(readfile("Night/Premium/Init.lua"))()
    else
        loadstring(game:HttpGet("https://raw.githubusercontent.com/null-wtf/Night/refs/heads/main/Night/Premium/Init.lua"))()
    end
else
    if Night.Dev and isfile("Night/Library/Init.lua") then
        loadstring(readfile("Night/Library/Init.lua"))()
    else
        loadstring(game:HttpGet("https://raw.githubusercontent.com/null-wtf/Night/refs/heads/main/Night/Library/Init.lua"))()
    end
end

local Assets = getgenv().Night.Assets
if not Assets or typeof(Assets) ~= "table" or (Assets and not Assets.Functions) then
    table.clear(Night)
    return warn("Failed to load Functions, Night uninjected")
end

-- 标准服务和变量设置
local UserInputService = Assets.Functions.cloneref(game:GetService("UserInputService")) :: UserInputService
local Workspace = Assets.Functions.cloneref(game:GetService("Workspace")) :: Workspace
local Players = Assets.Functions.cloneref(game:GetService("Players")) :: Players
local Camera = Workspace:FindFirstChildWhichIsA("Camera") :: Camera

if not UserInputService.KeyboardEnabled and UserInputService.TouchEnabled then
    Night.Mobile = true
    Night.Config.UI.Size = {X = 0.7, Y = 0.9}
end

local GameData = Assets.Functions.GetGameInfo()
local UIConfig = Assets.Config.Load("UI", "UI")
local GameConfig = Assets.Config.Load(tostring(Night.GameSave), "Game")

if typeof(GameData) == "table" then
    Night.GameRootId = GameData.rootPlaceId 
    if Night.GameSave == "root" then
        Night.GameSave = tostring(Night.GameRootId)
    end
end

if UIConfig == "no file" then
    Assets.Config.Save("UI", Night.Config.UI)
end

if GameConfig == "no file" and Night.CheckOtherConfig then
    if Night.GameRootId == Night.GameSave then
        GameConfig = Assets.Config.Load(tostring(game.PlaceId), "Game")
    else
        GameConfig = Assets.Config.Load(tostring(Night.GameRootId), "Game")
    end
end

if GameConfig == "no file" then
    Assets.Config.Save(tostring(Night.GameSave), getgenv().Night.Config.Game)
end

-- 加载通用和特定游戏的脚本 (这是原版加载外部文件的地方)
Assets.Main.Load("Universal")
Assets.Main.Load(getgenv().Night.GameSave)
Assets.Main.ToggleVisibility(true)

-- 传送处理
if queue_on_teleport then
    table.insert(Night.Connections, Players.LocalPlayer.OnTeleport:Connect(function(state)
        if not Night.Teleporting then
            Night.Teleporting = true
            
            local TeleportData = ""
            if Night.InitSave then
                TeleportData = "getgenv().NightInit = {"
                for i, v in Night.InitSave do
                    if i ~= #Night.InitSave then
                        if typeof(v) == "string" then
                            TeleportData = TeleportData..tostring(i)..' = "'..tostring(v)..'" , '
                        else
                            TeleportData = TeleportData..tostring(i).." = "..tostring(v).." , "
                        end
                    end
                end

                TeleportData = string.sub(TeleportData, 0, #TeleportData-2).."}\n"
            end

            if Night.Premium then
                TeleportData = TeleportData..[[
                    if not game:IsLoaded() then game.Loaded:Wait() end
                    if getgenv().NightInit and getgenv().NightInit.Dev and isfile("Night/Premium/Loader.lua") then loadstring(readfile("Night/Premium/Loader.lua"))() else loadstring(game:HttpGet("https://raw.githubusercontent.com/null-wtf/Night/refs/heads/main/Night/Premium/Loader.lua"))() end
                ]]
            else
                TeleportData = TeleportData..[[
                    if not game:IsLoaded() then game.Loaded:Wait() end
                    if getgenv().NightInit and getgenv().NightInit.Dev and isfile("Night/Loader.lua") then loadstring(readfile("Night/Loader.lua"))() else loadstring(game:HttpGet("https://raw.githubusercontent.com/null-wtf/Night/refs/heads/main/Night/Loader.luau"))() end
                ]]
            end

            queue_on_teleport(TeleportData)
        end
    end))
end

-- 移动端适配
if Night.Mobile then
    if Camera then
        if 0.4 >= (Camera.ViewportSize.X / 1000) - 0.1 then
            Night.Config.UI.Scale = 0.4
        else
            Night.Config.UI.Scale = (Camera.ViewportSize.X / 1000) - 0.1
        end
    end
end

-- =================================================================
--                 --- [自定义模块注入开始] ---
-- 此处代码将在 Night UI 加载完成后，自动创建您的“玩家增强”模块
-- =================================================================

local function CreateCustomPlayerModule()
    -- 确保所有 Night 组件都已就绪
    task.wait() 

    -- 再次获取最新的 Night 变量，确保安全
    local NightEnv = getgenv().Night
    if not (NightEnv and NightEnv.Assets and NightEnv.Tabs) then return end

    local Functions = NightEnv.Assets.Functions
    local Tabs = NightEnv.Tabs.Tabs
    local lplr = Functions.cloneref(game:GetService("Players")).LocalPlayer

    -- 创建数据表
    local ModuleData = {
        Toggle = nil,
        UnlimitedStamina = false,
        WalkSpeed = 16,
        JumpPower = 50,
        WelcomeMessage = "欢迎！"
    }

    -- 在 "Player" 标签页下创建新模块
    ModuleData.Toggle = Tabs.Player.Functions.NewModule({
        Name = '玩家增强',
        Description = '由一体化加载器创建的增强模块。',
        Icon = 'rbxassetid://10628748349',
        Flag = 'PlayerEnhancements_LoaderIntegrated',
        Callback = function(self, enabled)
            if enabled then
                Functions.Notify(ModuleData.WelcomeMessage, 5)
                if lplr.Character and lplr.Character:FindFirstChild("Humanoid") then
                    lplr.Character.Humanoid.WalkSpeed = ModuleData.WalkSpeed
                    lplr.Character.Humanoid.JumpPower = ModuleData.JumpPower
                end
            else
                Functions.Notify('玩家增强模块已禁用！', 3)
                if lplr.Character and lplr.Character:FindFirstChild("Humanoid") then
                    lplr.Character.Humanoid.WalkSpeed = 16
                    lplr.Character.Humanoid.JumpPower = 50
                end
            end
        end
    })

    -- 添加控件
    ModuleData.Toggle.Functions.Settings.MiniToggle({
        Name = '无限体力', Flag = 'UnlimitedStamina_Loader', Default = false,
        Callback = function(_, enabled) ModuleData.UnlimitedStamina = enabled; Functions.Notify('无限体力: ' .. (enabled and '开启' or '关闭'), 3) end
    })
    ModuleData.Toggle.Functions.Settings.Slider({
        Name = '移动速度', Min = 16, Max = 100, Default = 16, Decimals = 0, Flag = 'WalkSpeed_Loader',
        Callback = function(_, value) ModuleData.WalkSpeed = value; if ModuleData.Toggle.Data.Enabled and lplr.Character and lplr.Character:FindFirstChild("Humanoid") then lplr.Character.Humanoid.WalkSpeed = value end end
    })
    ModuleData.Toggle.Functions.Settings.Dropdown({
        Name = '跳跃高度', Default = '默认', Options = {'默认', '高', '超高'}, SelectLimit = 1, Flag = 'JumpPower_Loader',
        Callback = function(_, value) local p = {['默认']=50,['高']=100,['超高']=150}; ModuleData.JumpPower = p[value] or 50; if ModuleData.Toggle.Data.Enabled and lplr.Character and lplr.Character:FindFirstChild("Humanoid") then lplr.Character.Humanoid.JumpPower = ModuleData.JumpPower end end
    })
    ModuleData.Toggle.Functions.Settings.TextBox({
        Name = '欢迎消息', Default = "欢迎使用！", PlaceHolderText = '输入消息...', Flag = 'WelcomeMsg_Loader',
        Callback = function(_, text) ModuleData.WelcomeMessage = text end
    })
    
    Functions.Notify('自定义玩家模块已注入！', 5)
end

-- 调用函数来创建我们的模块
CreateCustomPlayerModule()

-- =================================================================
--                  --- [自定义模块注入结束] ---
-- =================================================================


-- 原始加载器收尾工作
Night.Main = Assets.Main
Night.LoadTime = os.clock() - Night.Load
Assets.Notifications.Send({
    Description = "Night 已加载, 用时 " .. string.format("%.1f", getgenv().Night.LoadTime) .. " 秒",
    Duration = 5
})

task.delay(0.2, function()
    if not isfile("Night/Version.txt") then
        writefile("Night/Version.txt", "Current version: " .. Night.Version)
        Assets.Notifications.Send({ Description = "Night 已更新至 " .. Night.Version, Duration = 15 })
    else
        local BuildData = readfile("Night/Version.txt")
        if BuildData ~= "Current version: " .. Night.Version then
            Assets.Notifications.Send({ Description = "Night 已更新至 " .. Night.Version, Duration = 15 })
            writefile("Night/Version.txt", "Current version: " .. Night.Version)
        end
    end
end)

Night.Loaded = true
return Assets.Main
